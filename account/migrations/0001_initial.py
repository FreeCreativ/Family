# Generated by Django 4.0.5 on 2022-07-06 18:37

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'A user with that user already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, primary_key=True, serialize=False, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()])),
                ('middle_name', models.CharField(max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user account',
                'verbose_name_plural': 'user accounts',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alive', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, upload_to='public/image')),
                ('date_of_birth', models.DateField(verbose_name='Date of birth')),
                ('date_of_death', models.DateField(blank=True, null=True, verbose_name='date of death')),
                ('date_registered', models.DateTimeField(auto_now_add=True, verbose_name='date registered')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='date registered')),
                ('cause_of_death', models.TextField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='Male', max_length=7)),
                ('height', models.CharField(blank=True, choices=[('S', 'Small'), ('M', 'Medium'), ('L', 'Large')], default='M', max_length=10)),
                ('blood_group', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('AB', 'AB'), ('O', 'O')], default='A', max_length=4)),
                ('genotype', models.CharField(blank=True, choices=[('AA', 'AA'), ('AS', 'AS'), ('SS', 'SS')], default='AA', max_length=4)),
                ('dad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='father', to='account.userdetail')),
                ('mum', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mother', to='account.userdetail')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PhoneRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(default='+234', max_length=20, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Phone',
                'verbose_name_plural': 'Phones',
            },
        ),
        migrations.CreateModel(
            name='OldestAlive',
            fields=[
                ('rank', models.IntegerField(auto_created=True, primary_key=True, serialize=False, verbose_name='Rank')),
                ('date_elected', models.DateField(auto_now_add=True, verbose_name='Date Elected')),
                ('date_retired', models.DateField(blank=True, verbose_name='Date Retired')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Oldest Alive',
                'verbose_name_plural': 'Oldest Alive',
            },
        ),
        migrations.CreateModel(
            name='Occupation',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('occupation_name', models.TextField()),
                ('description', models.TextField()),
                ('address', models.TextField()),
                ('date_registered', models.DateTimeField(auto_now_add=True, verbose_name='date registered')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='date registered')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GeneticDisease',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('age_of_infection', models.IntegerField(verbose_name='age of infection')),
                ('disease_name', models.CharField(max_length=100)),
                ('date_of_infection', models.DateField(verbose_name='date infected')),
                ('type', models.CharField(choices=[('H', 'Hereditary'), ('A', 'Acquired')], max_length=11)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name_of_school', models.TextField(default='School', verbose_name='Name of school')),
                ('year_of_entrance', models.DateField(verbose_name='Year of Entrance')),
                ('year_of_graduation', models.DateField(blank=True, verbose_name='Year Graduated')),
                ('school_level', models.CharField(choices=[('E', 'Elementary'), ('S', 'Secondary'), ('T', 'Tertiary'), ('P', 'Post Graduation')], max_length=15)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Education',
            },
        ),
        migrations.CreateModel(
            name='AdditionalEmail',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('date_registered', models.DateTimeField(auto_now_add=True, verbose_name='date registered')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='date registered')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Additional Email',
                'verbose_name_plural': 'Additional Emails',
            },
        ),
    ]
